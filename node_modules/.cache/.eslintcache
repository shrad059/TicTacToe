[{"/Users/shraddhasingh/Desktop/webdev/mongodb/tic-tac-toe/tictactoe/src/index.js":"1","/Users/shraddhasingh/Desktop/webdev/mongodb/tic-tac-toe/tictactoe/src/App.js":"2","/Users/shraddhasingh/Desktop/webdev/mongodb/tic-tac-toe/tictactoe/src/reportWebVitals.js":"3","/Users/shraddhasingh/Desktop/webdev/mongodb/tic-tac-toe/tictactoe/src/components/Square.js":"4","/Users/shraddhasingh/Desktop/webdev/mongodb/tic-tac-toe/tictactoe/src/components/Patterns.js":"5"},{"size":535,"mtime":1670853832904,"results":"6","hashOfConfig":"7"},{"size":2757,"mtime":1670882165301,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1670853832904,"results":"9","hashOfConfig":"7"},{"size":190,"mtime":1670864963886,"results":"10","hashOfConfig":"7"},{"size":129,"mtime":1670872990531,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"btfq08",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/shraddhasingh/Desktop/webdev/mongodb/tic-tac-toe/tictactoe/src/index.js",[],[],"/Users/shraddhasingh/Desktop/webdev/mongodb/tic-tac-toe/tictactoe/src/App.js",["28","29","30","31","32","33","34","35","36"],[],"import './App.css';\nimport {useState, useEffect} from 'react'\nimport Square from './components/Square';\nimport {Patterns, Patters} from \"./components/Patterns\"\n\n\nfunction App() {\n  const [board,setBoard]=useState([\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"]);\n  const [player, setPlayer]=useState(\"O\");\n  const [result, setResult]= useState({winner: \"none\", state:\"none\"})\n  \n  useEffect(()=>{\n    checkWin();\n    checkIfTie();\n    if(player == \"X\"){\n      setPlayer(\"0\");\n    }\n    else{\n      setPlayer(\"X\")\n    }\n  },[board]);\n\n  useEffect(()=>{\n    if(result.state != \"none\"){\n      alert(\"game finished! Player \"+ result.winner+\" won\");\n      restartGame();\n    }\n  },[result])\n\n  const chooseSquare=(square)=>{\n    setBoard(board.map((val, idx) =>{\n      if(idx==square && val==\"\"){\n        return player\n      }\n\n      return val;\n    }));\n  \n  };\n  const checkWin =() =>{\n    Patterns.forEach((currPattern)=>{\n      const firstPlayer =board[currPattern[0]];\n      //if firstPlayer is an empty string then dont want to move forward\n      if(firstPlayer ==\"\"){\n        return;\n      }\n      let foundWinningPattern= true;\n      currPattern.forEach((idx) =>{\n        if (board[idx] != firstPlayer){\n          foundWinningPattern =false\n        }\n    });\n    if(foundWinningPattern){\n        setResult({winner:player, state:\"won\"})\n    }\n  });\n};\nconst checkIfTie =() =>{\n  let filled=true;\n  board.forEach((square)=>{\n    if(square==\"\"){\n      filled=false;\n    }\n  })\n  if(filled){\n    setResult({winner: \"NO ONE\", state: \"TIE\"})\n  }\n}\n  const restartGame =() =>{\n    setBoard([\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"]);\n    setPlayer(\"X\")\n  }\n  return (\n    <div className=\"App\">\n      <div className=\"board\">\n        <div className=\"row\">\n        <Square \n          val={board[0]}\n          chooseSquare={()=>chooseSquare(0)}\n        />\n        <Square \n          val={board[1]}\n          chooseSquare={()=>chooseSquare(1)}\n        />\n        <Square \n          val={board[2]}\n          chooseSquare={()=>chooseSquare(2)}\n        />\n        </div>\n        <div className=\"row\">\n        <Square \n          val={board[3]}\n          chooseSquare={()=>chooseSquare(3)}\n        />\n        <Square \n          val={board[4]}\n          chooseSquare={()=>chooseSquare(4)}\n        />\n        <Square \n          val={board[5]}\n          chooseSquare={()=>chooseSquare(5)}\n        />\n        </div>\n        <div className=\"row\">\n        <Square \n          val={board[6]}\n          chooseSquare={()=>chooseSquare(6)}\n        />\n        <Square \n          val={board[7]}\n          chooseSquare={()=>chooseSquare(7)}\n        />\n        <Square \n          val={board[8]}\n          chooseSquare={()=>chooseSquare(8)}\n        />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/shraddhasingh/Desktop/webdev/mongodb/tic-tac-toe/tictactoe/src/reportWebVitals.js",[],[],"/Users/shraddhasingh/Desktop/webdev/mongodb/tic-tac-toe/tictactoe/src/components/Square.js",[],[],"/Users/shraddhasingh/Desktop/webdev/mongodb/tic-tac-toe/tictactoe/src/components/Patterns.js",[],[],{"ruleId":"37","severity":1,"message":"38","line":4,"column":19,"nodeType":"39","messageId":"40","endLine":4,"endColumn":26},{"ruleId":"41","severity":1,"message":"42","line":15,"column":15,"nodeType":"43","messageId":"44","endLine":15,"endColumn":17},{"ruleId":"45","severity":1,"message":"46","line":21,"column":5,"nodeType":"47","endLine":21,"endColumn":12,"suggestions":"48"},{"ruleId":"41","severity":1,"message":"49","line":24,"column":21,"nodeType":"43","messageId":"44","endLine":24,"endColumn":23},{"ruleId":"41","severity":1,"message":"42","line":32,"column":13,"nodeType":"43","messageId":"44","endLine":32,"endColumn":15},{"ruleId":"41","severity":1,"message":"42","line":32,"column":28,"nodeType":"43","messageId":"44","endLine":32,"endColumn":30},{"ruleId":"41","severity":1,"message":"42","line":44,"column":22,"nodeType":"43","messageId":"44","endLine":44,"endColumn":24},{"ruleId":"41","severity":1,"message":"49","line":49,"column":24,"nodeType":"43","messageId":"44","endLine":49,"endColumn":26},{"ruleId":"41","severity":1,"message":"42","line":61,"column":14,"nodeType":"43","messageId":"44","endLine":61,"endColumn":16},"no-unused-vars","'Patters' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'checkIfTie', 'checkWin', and 'player'. Either include them or remove the dependency array.","ArrayExpression",["50"],"Expected '!==' and instead saw '!='.",{"desc":"51","fix":"52"},"Update the dependencies array to be: [board, checkIfTie, checkWin, player]",{"range":"53","text":"54"},[504,511],"[board, checkIfTie, checkWin, player]"]